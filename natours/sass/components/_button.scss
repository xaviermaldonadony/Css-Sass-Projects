.btn {
	// we want it to look the same after visited
	&,// this will translate to just button
	&:link,
	&:visited {
		text-transform: uppercase;
		text-decoration: none;
		padding: 1.5rem 4rem;
		display: inline-block;
		border-radius: 10rem;
		/* on the initial state there can be a transition
	on all the properties  */
		transition: all 0.2s;
		position: relative;
		font-size: $default-font-size;

		// change for the button element
		border: none;
		cursor: pointer;

		@include respond(phone) {
			padding: 1.2rem 3rem;
		}
	}

	&:hover {
		transform: translateY(-3px);
		/*offset in the x, y, blur  color */
		box-shadow: 0 1rem 2rem rgba($color-black, 0.2);

		&::after {
			transform: scaleX(1.4) scaleY(1.6);
			// this gives the fade out
			opacity: 0;
		}
	}

	&:active,
	&:focus {
		outline: none;
		transform: translateY(-1px);
		// btn looks closer with a smaller shadow and blur
		box-shadow: 0 0.5rem 1rem rgba($color-black, 0.2);
	}

	&--white {
		background-color: $color-white;
		color: $color-grey-dark;
		&::after {
			background-color: $color-white;
		}
	}

	&--green {
		background-color: $color-primary;
		color: $color-white;
		&::after {
			background-color: $color-primary;
		}
	}
	//  we want to set up an element that looks exactly like our elemnt, which is the button
	// after we hover over this elements goes behind our original element
	&::after {
		content: '';
		display: inline-block;
		height: 100%;
		width: 100%;
		border-radius: 10rem;
		position: absolute;
		top: 0;
		left: 0;
		z-index: -1;
		transition: all 0.4s;
	}

	&--animated {
		/* name duration timing func delay */
		animation: moveInButton 0.5s ease-out 0.75s;
		/* automatically apllies the styles of 0% before the animation starts */
		animation-fill-mode: backwards;
	}
}

.btn-text {
	&:link,
	&:visited {
		font-size: $default-font-size;
		color: $color-primary;
		display: inline-block;
		text-decoration: none;
		border-bottom: 1px solid $color-primary;
		padding: 3px;
		transition: all;
	}

	&:hover {
		background-color: $color-primary;
		color: $color-white;
		box-shadow: 0 1rem 2rem rgba($color-black, 0.15);
		transform: translateY(-3px);
	}

	&:active {
		box-shadow: 0 0.5rem 1rem rgba($color-black, 0.15);
		transform: translateY(0px);
	}
}
